<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="100%" height="100%" xmlns:app="ro.calin.app.*" xmlns:model="ro.calin.component.model.*">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import ro.calin.component.model.CategoryViewerModel;
			import ro.calin.component.model.PictureModel;
			import ro.calin.component.model.PictureViewerModel;
			import ro.calin.component.model.SubcategoryModel;
			

			protected function configService_resultHandler(event:ResultEvent):void
			{
				var xml:XML = event.result as XML;
				var categories:ArrayList = parseCategories(xml.categories[0].category);
				var wallpapers:PictureViewerModel = parseWallpapers(xml.wallpapers[0]);
				
				//link external with internal(attach categories to 'gallery' menu entry)
				model.entries.getItemAt(0).entries = categories;
				
				var app:App = new App(model, wallpapers);
				
				app.percentHeight = 100;
				app.percentWidth = 100;
				addElement(app);
			}


			protected function configService_faultHandler(event:FaultEvent):void
			{
				Alert.show("Error! Data is unavailable!");
			}
			
			
			private function parseCategories(categories:XMLList):ArrayList {
				var categoryList:ArrayList = new ArrayList();

				var idx:Number = 0;
				for each (var category:XML in categories) {
					var model:MenuEntryModel = new MenuEntryModel();
					model.label = category.@name;
					model.color = uint(category.@color);
					var categoryModel:CategoryViewerModel = new CategoryViewerModel();
					categoryModel.subcategories = parseSubcategories(category.subcategory);
					
					//map categories to their index in the menu (to know where to put the categviewer)
					categoryModel.extra = idx++;
					
					model.extra = categoryModel;
					categoryList.addItem(model);
				}
				
				return categoryList;
			}
			
			private function parseSubcategories(subcategories:XMLList):ArrayList {
				var subcategoryList:ArrayList = new ArrayList();
				
				for each (var subcategory:XML in subcategories) {
					var model:SubcategoryModel = new SubcategoryModel();
					model.name = subcategory.@name;
					model.description = subcategory.@description;
					model.picUrl = subcategory.@picUrl;
					var pictureModel:PictureViewerModel = new PictureViewerModel();
					pictureModel.pictures = parsePictures(subcategory.picture); 
					model.extra = pictureModel;
					subcategoryList.addItem(model);
				}
				
				return subcategoryList;
			}
			
			private function parseWallpapers(wallpaperList:XML):PictureViewerModel {
				var model:PictureViewerModel = new PictureViewerModel();
				
				model.pictures = parsePictures(wallpaperList.picture);
				
				return model;
			}
			
			private function parsePictures(pictures:XMLList):Array {
				var pictureList:Array = new Array();
				
				for each (var picture:XML in pictures) {
					var model:PictureModel = new PictureModel;
					model.url = picture.@url;
					pictureList.push(model);
				}
				
				return pictureList;
			}

		]]>
	</fx:Script>
	
	<s:applicationComplete>
		<![CDATA[
			configService.send();
		]]>
	</s:applicationComplete>
	
	<fx:Declarations>
		<!-- Used to get external model. This service requests the xml config. -->
		<s:HTTPService id="configService" url="config.xml" result="configService_resultHandler(event)"
					   fault="configService_faultHandler(event)" resultFormat="e4x"/>
		
		<!-- Declare internal model -->
		<model:MenuModel id="model" alpha="0.5" buttonWidth="220" >
			<model:entries>
				<s:ArrayList>
					<model:MenuEntryModel label="gallery">
					</model:MenuEntryModel>
					<model:MenuEntryModel label="info">
						<model:entries>
							<s:ArrayList>
								<model:MenuEntryModel label="blog">
								</model:MenuEntryModel>
								<model:MenuEntryModel label="contact">
								</model:MenuEntryModel>
								<model:MenuEntryModel label="about">
								</model:MenuEntryModel>
								<model:MenuEntryModel label="friends">
								</model:MenuEntryModel>
							</s:ArrayList>
						</model:entries>
					</model:MenuEntryModel>
					<model:MenuEntryModel label="share">
						<model:entries>
							<s:ArrayList>
								<model:MenuEntryModel label="facebook">
								</model:MenuEntryModel>
								<model:MenuEntryModel label="like on facebook">
								</model:MenuEntryModel>
							</s:ArrayList>
						</model:entries>
					</model:MenuEntryModel>
				</s:ArrayList>
			</model:entries>
		</model:MenuModel>
	</fx:Declarations>
</s:Application>
