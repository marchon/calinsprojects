<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:component="ro.calin.component.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("ro.calin.component.Menu")]
	</fx:Metadata>
	
	<!-- SkinParts
	name=logo, type=mx.controls.Image, required=false
	name=bar, type=spark.components.ButtonBar, required=true
	-->
	
	<!-- Layer 1: background -->
	<s:Rect width="100%" height="100%" alpha="{hostComponent.model.alpha}">
		<s:fill>
			<s:SolidColor color="{hostComponent.model.color}"/>
		</s:fill>
	</s:Rect>
	
	<!-- Layer 2: logo and button group -->
	<s:HGroup>
		<!-- Sublayer 2.1: image logo -->
		<mx:Image id="logo" buttonMode="true" source="{hostComponent.model.logoUrl}"/>
		
		<!-- Sublayer 2.2: button grup -->
		<s:DataGroup id="bar" width="100%" height="100%" verticalCenter="0">
			<s:layout>
				<s:HorizontalLayout gap="0" />
			</s:layout>
				<fx:Script>
					<![CDATA[
						import ro.calin.component.model.MenuEntryModel;
					]]>
				</fx:Script>
			<!-- Render a button for each item. -->
			<s:itemRenderer>
				<fx:Component>
					<!-- Inline item renderer. -->
					<s:ItemRenderer>
						<fx:Script>
							<![CDATA[
								//hack to get rid of grey shade artifact
								override protected function get hovered():Boolean {
									return false;
								}
							]]>
						</fx:Script>
						<!-- Contains only a MenuButton component. -->
						<component:MenuButton id="button" width="{outerDocument.hostComponent.getButtonWidth(data as MenuEntryModel)}" 
											  height="{outerDocument.hostComponent.height}" buttonMode="true" entry="{data}"
											  buttonMiddlePosition="{outerDocument.logo.width + outerDocument.hostComponent.getButtonDistance(itemIndex)}"/>
												<!--add logo to get whole distance-->
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:DataGroup>
	</s:HGroup>
</s:Skin>
